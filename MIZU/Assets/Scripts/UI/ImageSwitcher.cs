using Cysharp.Threading.Tasks;
using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.EventSystems;
using UnityEngine.UI;

public class ImageSwitcher : MonoBehaviour
{
    [Header("???????A?N?e?B?u???????????????X?g??????????")]
    [SerializeField] private List<Image> sequenceImages = new List<Image>();

    [Header("??????????????????g???{?^??")]
    [SerializeField] private Button controlButton;

    [Header("?A?????????????A?{?^????????????????????(?b)")]
    [SerializeField] private float debounceTime = 0.1f;

    private int currentStep = 0;  //  ???????????\?????i?K
    private bool isSequenceActive = false;  //  ?????V?[?N?G???X???A?N?e?B?u??????????????
    private bool canReceiveInput = true;  //  ???????????????????????????t???O

    void Start()
    {
        //  ?S?????????????A?N?e?B?u??????????
        foreach (var image in sequenceImages)
        {
            if (image != null)
                image.gameObject.SetActive(false);
            else
                Debug.LogError("Image???X?g???????????I?u?W?F?N?g??????");
        }

        //  ?{?^?????????????????????????????????m?F
        if (controlButton != null)
            controlButton.onClick.AddListener(OnControlButtonClicked);
        else
            Debug.LogError("?{?^????????????????????????");
    }

    //  ?Q?[???p?b?h??A?{?^?????L?[?{?[?h??Enter?L?[?????????????????\?b?h
    public async UniTask HandleNextImage()
    {
        if (!canReceiveInput)
        {
            //  ?A?????????????A????????????
            return;
        }

        //  ???????????t????????????????
        canReceiveInput = false;

        if (isSequenceActive)
        {
            //  ?V?[?P???X???A?N?e?B?u???????A???????????\?????????V?[?P???X???I??????
            await AdvanceImageSequence();
        }
        else
        {
            //  ?V?[?P???X???A?N?e?B?u???????????A?{?^?????I???????????????m?F
            GameObject selectedObject = EventSystem.current.currentSelectedGameObject;
            if (selectedObject == controlButton.gameObject)
            {
                await StartImageSequence();
            }
        }

        //  debounceTime?b?????????????x?????t????
        await UniTask.Delay(System.TimeSpan.FromSeconds(debounceTime));
        canReceiveInput = true;
    }

    //  ?{?^?????????????????????o?????????\?b?h
    private void OnControlButtonClicked()
    {
        HandleNextImage().Forget();
    }

    //  ?????V?[?N?G???X???J?n???????\?b?h
    private UniTask StartImageSequence()
    {
        if (sequenceImages.Count == 0)
        {
            Debug.LogError("Image Sequence????????????????");
            return UniTask.CompletedTask;
        }

        isSequenceActive = true;
        currentStep = 0;

        //  ?{?^??????????
        controlButton.interactable = false;

        //  ?????????????\??????
        var image = sequenceImages[currentStep];
        if (image != null)
        {
            image.gameObject.SetActive(true);
            currentStep++;
        }
        else
        {
            Debug.LogError($"Image???X?g???C???f?b?N?X {currentStep} ???????????I?u?W?F?N?g??????");
        }

        return UniTask.CompletedTask;
    }

    //  ?????V?[?N?G???X???i?s?????????\?b?h
    private UniTask AdvanceImageSequence()
    {
        if (currentStep < sequenceImages.Count)
        {
            //  ?O???????????A?N?e?B?u??????
            if (currentStep > 0)
            {
                var previousImage = sequenceImages[currentStep - 1];
                if (previousImage != null)
                {
                    previousImage.gameObject.SetActive(false);
                }
            }

            //  ???????????\??????
            var image = sequenceImages[currentStep];
            if (image != null)
            {
                image.gameObject.SetActive(true);
                currentStep++;
            }
        }
        else
        {
            //  ?????????????\?????????????????A?????????????????A?N?e?B?u??????
            foreach (var image in sequenceImages)
            {
                if (image != null)
                    image.gameObject.SetActive(false);
            }
            currentStep = 0;
            isSequenceActive = false;


            //  ?{?^???????x?L????????
            controlButton.interactable = true;

            //  ?{?^?????I????????????
            EventSystem.current.SetSelectedGameObject(controlButton.gameObject);
        }

        return UniTask.CompletedTask;
    }

    public void HandleBackImage()
    {
        if (!isSequenceActive)
            return;

        //  ?\??????????????????2???????~????
        if (currentStep > 1)
        {
            //  ?????\????????????????
            var currentImage = sequenceImages[currentStep - 1];
            if (currentImage != null)
            {
                currentImage.gameObject.SetActive(false);
            }

            currentStep--;

            //  ?O??????
            var previousImage = sequenceImages[currentStep - 1];
            if (previousImage != null)
            {
                previousImage.gameObject.SetActive(true);
            }
            return;
        }

        //  ?\??????????????????1????????
        //  ?S?????????????\????????
        foreach (var image in sequenceImages)
        {
            if (image != null)
            {
                image.gameObject.SetActive(false);
            }
        }
        currentStep = 0;
        isSequenceActive = false;
        //  ?{?^???????x?L????????
        controlButton.interactable = true;
        // ?{?^?????I????????????
        EventSystem.current.SetSelectedGameObject(controlButton.gameObject);

    }
}